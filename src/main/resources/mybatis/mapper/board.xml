<?xml version="1.0" encoding="UTF-8"?>

<!-- ==== mapper 기본설정 ==== -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- ==== 루트 엘리먼트 & 네임스페이스 설정(프로젝트 전체내에서 유일해야 한다.) ==== -->
<mapper namespace="com.spring.app.board.model.BoardDAO">

<!--  생성된 게시판 LeftBar에 나열하기 (출력) -->
<select id="selectBoardList" resultType="BoardVO">
select boardNo, boardName, boardDesc, isPublic, createdBy, createdAt, status
from tbl_board
WHERE status = 1
ORDER BY createdAt DESC
</select>

<!-- 게시판 생성하기 -->
<insert id="addBoard" parameterType="BoardVO">
	insert into tbl_board (boardNo,boardName,boardDesc,isPublic,createdBy) 
	values(boardSeq.nextval,#{boardName},#{boardDesc},#{isPublic},#{createdBy})
</insert>

<!-- 게시판 생성의 공개여부 부서 설정 시 부서 워드 검색(부서 검색)  -->
<select id="addBoardSearchDept" parameterType="map" resultType="map">
	select DEPARTMENTNAME,DEPARTMENTNO
	from tbl_department
	where departmentname like '%'||#{searchWord}||'%'
</select>

<!-- 게시판 생성의 공개여부 부서 설정 시 부서 전체 검색(부서 검색) -->
<select id="addBoardSearchAllDept" resultType="map">
	select DEPARTMENTNAME,DEPARTMENTNO
	from tbl_department
</select>


<!-- 게시판 수정하기 -->
<update id="updateBoard" parameterType="BoardVO">
	update tbl_board set boardName = #{boardName}, boardDesc = #{boardDesc}, isPublic = #{isPublic}
	where boardNo = #{boardNo}
</update>


<!--  수정할 input 요소에 기존값을 뿌려주기 위함. -->
<select id="getBoardDetailByNo" parameterType="String" resultType="BoardVO">
	select boardno, boardname, boarddesc, ispublic, createdby
	from tbl_board
	where boardNo = #{boardNo}
</select>


<!-- 게시판삭제(비활성화)하기(status 값변경)-->
<update id="disableBoard" parameterType="String">
	update tbl_board set status=0
	where boardNo = #{boardNo}
</update>

<!-- 글쓰기 시 글작성 할 (접근 권한있는)게시판 목록 <select> 태그에 보여주기 -->
<select id="getAccessibleBoardList"  parameterType="String" resultType="map">
	SELECT to_char(b.boardNo) AS boardNo , b.boardName
	FROM tbl_board b
	LEFT JOIN tbl_board_department bd ON b.boardNo = bd.fk_boardNo
	WHERE b.isPublic = 1 and status = 1 
   OR bd.fk_departmentNo = (SELECT fk_departmentNo FROM tbl_employee WHERE employeeNo = 100013)
</select>

<!-- 게시글 등록하기 -->
<insert id="addPost" parameterType="PostVO">
	<choose>
        <when test="isNotice == 1"> <!-- 공지사항 글로 등록할 경우 -->
            INSERT INTO tbl_post 
                (postNo, fk_boardNo, fk_employeeNo, name, subject, content, allowComments, isNotice, noticeEndDate) 
            VALUES 
                (postSeq.nextval, #{fk_boardNo}, 100013, '이상우', #{subject}, #{content}, #{allowComments}, #{isNotice}, TO_DATE(#{noticeEndDate}, 'YYYY-MM-DD'))
        </when>
        <otherwise>   <!-- 공지사항 글이 아닌 경우 -->
            INSERT INTO tbl_post 
                (postNo, fk_boardNo, fk_employeeNo, name, subject, content, allowComments) 
            VALUES 
                (postSeq.nextval, #{fk_boardNo}, 100013, '이상우', #{subject}, #{content}, #{allowComments})
        </otherwise>
    </choose>
</insert>

<!-- 게시판 메인 페이지에 뿌려줄 모든 게시글 조회 (조인했음)-->
<resultMap id="selectAllPost_Map" type="PostVO">
 <!-- PostVO의 필드 매핑 -->
    <result property="postNo" column="postNo"/>
    <result property="fk_boardNo" column="fk_boardNo"/>
    <result property="fk_employeeNo" column="fk_employeeNo"/>
    <result property="name" column="name"/>
    <result property="subject" column="subject"/>
    <result property="content" column="content"/>
    <result property="readCount" column="readCount"/>
    <result property="regDate" column="regDate"/>
    <result property="commentCount" column="commentCount"/>
    <result property="allowComments" column="allowComments"/>
    <result property="status" column="status"/>
    <result property="isNotice" column="isNotice"/>
    <result property="noticeEndDate" column="noticeEndDate"/>

 <!-- BoardVO의 필드 매핑 -->
    <association property="boardvo" javaType="BoardVO">
        <result property="boardNo" column="boardNo"/>
        <result property="boardName" column="boardName"/>
    </association>
</resultMap>
<select id="selectAllPost" resultMap="selectAllPost_Map" parameterType="HashMap">
	SELECT 
    V.postNo, V.fk_boardNo, V.fk_employeeNo, V.name, V.subject, V.content, 
    V.readCount, V.regDate, V.commentCount, V.allowComments, V.status, 
    V.isNotice, V.noticeEndDate,
    b.boardNo, b.boardName
FROM 
    ( 
        SELECT row_number() OVER (ORDER BY postNo DESC) AS rno, 
               postNo, fk_boardNo, fk_employeeNo, name, subject, content,
               readCount, to_char(regDate, 'yyyy-mm-dd hh24:mi:ss') AS regDate, 
               commentCount, allowComments, status, isNotice, noticeEndDate
        FROM tbl_post
        WHERE status = 1
    ) V
JOIN tbl_board b ON V.fk_boardNo = b.boardNo
WHERE rno BETWEEN to_number(#{startRno}) AND to_number(#{endRno})
</select>

<!-- === 총 게시물 건수(totalCount) 구하기 === --> 
   <select id="getTotalCount"  resultType="int">
      select count(*)
      from tbl_post
      where status = 1
   </select>
   
<!--    게시글 하나 조회하기
	<select id="goViewOnePost" resultType="PostVO">
		select POSTNO,FK_BOARDNO,FK_EMPLOYEENO,NAME,SUBJECT,CONTENT,READCOUNT,REGDATE,COMMENTCOUNT
		from tbl_post
		where postNo=#{postNo}
	</select>
 -->
   
</mapper>









