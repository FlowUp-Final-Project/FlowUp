<?xml version="1.0" encoding="UTF-8"?>

<!-- ==== mapper 기본설정 ==== -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- ==== 루트 엘리먼트 & 네임스페이스 설정(프로젝트 전체내에서 유일해야 한다.) ==== -->
<mapper namespace="com.spring.app.mail.model.MailDAO">
   
   	<select id="mailListAll" resultType="MailVO">
  		select mailNo, fk_employeeNo, subject, content
 		from tbl_mail
   	</select>
   
   	<!-- === 총 메일 개수 구하기 === --> 
   	<select id="getTotalCount"  resultType="int">
   		select count(*)
   		from tbl_mail
    	where deleteStatus = 0
   	</select>
   
   	<!-- === 받은 메일 목록 조회 === -->
   	<resultMap id="selectMailList_Map" type="MailVO">
	<!-- MailVO의 필드 매핑 -->
	    <result property="mailNo" 			column="mailNo"/>
	    <result property="fk_employeeNo" 	column="fk_employeeNo"/>
	    <result property="subject" 			column="subject"/>
	    <result property="content" 			column="content"/>
	    <result property="sendDate" 		column="sendDate"/>
	    <result property="readStatus" 		column="readStatus"/>
	    <result property="deleteStatus" 	column="deleteStatus"/>
	    <result property="saveStatus" 		column="saveStatus"/>
	    <result property="importantStatus" 	column="importantStatus"/>

 	<!-- EmployeeVO의 필드 매핑 -->
	    <association property="employeevo" javaType="EmployeeVO">
	        <result property="employeeNo" column="employeeNo"/>
	        <result property="name" column="name"/>
	    </association>
	</resultMap>

	<select id="selectMailList" resultMap="selectMailList_Map" parameterType="HashMap">
		SELECT M.mailNo, M.fk_employeeNo, M.subject, M.content, 
		       M.sendDate, M.readStatus, M.deleteStatus, M.saveStatus, M.importantStatus,
		       e.employeeNo, e.name,
		       f.Filesize
		FROM 
		    ( 
		        SELECT row_number() OVER (ORDER BY mailNo DESC) AS rno, 
		               mailNo, fk_employeeNo, subject, content,
		               to_char(sendDate, 'yyyy-mm-dd hh24:mi') AS sendDate,
		               readStatus, deleteStatus, saveStatus, importantStatus
		        FROM tbl_mail
		        WHERE 1 = 1
		        
		        <!-- status 값이 null이 아니고 빈 문자열("")도 아닐 경우에만 조건을 추가 -->
	            <if test="deleteStatus != null and deleteStatus != ''"> 
	                AND deleteStatus = #{deleteStatus} 
	            </if>
	            <if test="saveStatus != null and saveStatus != ''"> 
	                AND saveStatus = #{saveStatus} 
	            </if>
	            <if test="importantStatus != null and importantStatus != ''"> 
	                AND importantStatus = #{importantStatus} 
	            </if>

		    ) M
			JOIN tbl_employee e
			  ON M.fk_employeeNo = e.employeeNo
		  	LEFT JOIN tbl_mailFile f
	  		  ON M.mailNo = f.fk_mailNo
		
		<!-- startRno와 endRno가 null이 아닐 때만 페이징 조건을 적용 -->
	    <if test="startRno != null and endRno != null">
        	WHERE rno BETWEEN to_number(#{startRno}) AND to_number(#{endRno})
    	</if>
   	</select>
   
   
	<!-- 안 읽은 메일 개수(unread) 조회 -->
	<select id="getUnreadCount" resultType="int">
	  	SELECT COUNT(*)
	  	FROM tbl_mail
	  	WHERE readStatus = 0
	    AND deleteStatus = 0
	</select>
	
	
	<!-- 현재 메일의 importantStatus 조회 -->
	<select id="getImportantStatus" parameterType="int" resultType="int">
	    SELECT importantStatus 
	    FROM tbl_mail
	    WHERE mailNo = #{mailNo}
	</select>
	
	<!-- 별 클릭시 importantStatus 값을 업데이트 -->
	<update id="updateImportantStatus" parameterType="map">
	    UPDATE tbl_mail
	    SET importantStatus = #{importantStatus}
	    WHERE mailNo = #{mailNo}
	</update>
	
	<!-- 현재 메일의 ReadStatus 조회 -->
	<select id="getReadStatus" parameterType="int" resultType="int">
	    SELECT readStatus 
	    FROM tbl_mail
	    WHERE mailNo = #{mailNo}
	</select>
	
	<!-- 메일 아이콘 클릭시 ReadStatus 값을 업데이트 -->
	<update id="updateReadStatus" parameterType="map">
	    UPDATE tbl_mail
	    SET readStatus = #{readStatus}
	    WHERE mailNo = #{mailNo}
	</update>

	<!-- 중요 메일함 조회 -->
	<select id="selectImportantMail" parameterType="String" resultMap="selectMailList_Map">
	    SELECT M.mailNo, M.fk_employeeNo, M.subject, M.content
	          ,to_char(M.sendDate, 'yyyy-mm-dd hh24:mi') AS sendDate
			  ,M.readStatus ,M.deleteStatus ,M.saveStatus ,M.importantStatus
	          ,E.employeeNo AS employeeNo
	          ,E.name AS name
	    FROM tbl_mail M
	    JOIN tbl_employee E
	      ON M.fk_employeeNo = E.employeeNo
	    WHERE M.importantStatus = 1
	      AND M.deleteStatus = 0
	      <!--
		      특정 유저 empNo를 발신자나 수신자 기준으로 필터할때 추가하기
		      발신자가 empNo 인 경우
		      AND (M.fk_employeeNo = #{empNo} OR M.receiverEmpNo = #{empNo})
	      -->
	      AND M.fk_employeeNo = #{empNo}
	    ORDER BY M.mailNo DESC
	</select>
	
	
	<!-- 메일 하나 조회하기 -->
	<resultMap id="viewMail" type="MailVO">
	    <!-- MailVO의 필드 매핑 -->
	    <result property="mailNo"        column="mailNo"/>
	    <result property="subject"       column="subject"/>
	    <result property="content"       column="content"/>
	    <result property="sendDate"      column="sendDate"/>
	    <result property="regDate"       column="regDate"/>
	    <result property="importantStatus" column="importantStatus"/>
	    <result property="readStatus"    column="readStatus"/>
	    
	    <!-- 첨부파일 관련 필드 매핑 -->
	    <result property="fileSize"      column="fileSize"/>
	    <result property="orgFileName"   column="orgFileName"/>
	    <result property="fileName"      column="fileName"/>
	
	    <!-- 참조 정보 관련 필드 매핑 -->
	    <result property="refStatus"     column="refStatus"/>
	    <result property="refName"       column="refName"/>
	    <result property="refMail"       column="refMail"/>
	    
	    <!-- EmployeeVO의 필드 매핑 -->
	    <association property="employeevo" javaType="EmployeeVO">
	        <result property="employeeNo" column="employeeNo"/>
	        <result property="name"       column="name"/>
	        <result property="email"      column="email"/>
	    </association>
	</resultMap>

	<select id="viewMail" resultMap="viewMail" parameterType="HashMap">
	    select M.mailNo, M.subject, M.content, M.sendDate, M.importantStatus, M.readStatus,
	           f.fileSize, f.orgFileName, f.fileName,
	           e.employeeNo, e.name, e.email,
	           r.refStatus, r.refName, r.refMail
	    from tbl_mail M
	    left join tbl_mailFile f
	      on M.mailNo = f.fk_mailNo
	    left join tbl_referenced r
	      on M.mailNo = r.fk_mailNo
	    join tbl_employee e
	      on M.fk_employeeNo = e.employeeNo
	    where M.mailNo = #{mailNo}
	</select>

	
	
	<!-- 메일함 정렬 선택 시작 -->
	<select id="mailListSort" resultMap="selectMailList_Map" parameterType="HashMap">
	    SELECT 
	        M.mailNo, M.fk_employeeNo, M.subject, M.content,
	        to_char(M.sendDate, 'yyyy-mm-dd hh24:mi') AS sendDate,
	        M.readStatus, M.deleteStatus, M.saveStatus, M.importantStatus,
	        e.employeeNo, e.name,
	        f.fileSize
	    FROM tbl_mail M
	    JOIN tbl_employee e ON M.fk_employeeNo = e.employeeNo
	    LEFT JOIN tbl_mailFile f ON M.mailNo = f.fk_mailNo
	    WHERE M.deleteStatus = 0
	
	    <!-- 동적 ORDER BY -->
	    <if test="sortKey != null and sortKey != ''">
	        ORDER BY
	        <!-- 안전하게 처리: sortKey가 subject, sendDate, fileSize 중 하나만 허용 -->
	        <choose>
	            <when test="sortKey == 'subject'">
	                M.subject ASC
	            </when>
	            <when test="sortKey == 'sendDate'">
	                M.sendDate DESC
	            </when>
	            <when test="sortKey == 'fileSize'">
	                f.fileSize DESC
	            </when>
	            <otherwise>
	                M.mailNo DESC
	            </otherwise>
	        </choose>
	    </if>
	</select>
	<!-- 메일함 정렬 선택 끝 -->
	
	
	<update id="updateDeleteStatus" parameterType="list">
	    UPDATE tbl_mail
	    SET deleteStatus = 1
	    WHERE mailNo IN
	    <foreach collection="list" item="mailNo" open="(" separator="," close=")">
	        #{mailNo}
	    </foreach>
	</update>
	
   	<!-- deleteStatus=1 인 메일 조회 -->
	<select id="selectDeletedMail" resultMap="selectMailList_Map">
	    SELECT 
	        M.mailNo,
	        M.fk_employeeNo,
	        M.subject,
	        M.content,
	        to_char(M.sendDate, 'yyyy-mm-dd hh24:mi') AS sendDate,
	        M.readStatus,
	        M.deleteStatus,
	        M.saveStatus,
	        M.importantStatus,
	        E.employeeNo AS employeeNo,
	        E.name AS name,
	        F.fileSize
	    FROM tbl_mail M
	    JOIN tbl_employee E ON M.fk_employeeNo = E.employeeNo
	    LEFT JOIN tbl_mailFile F ON M.mailNo = F.fk_mailNo
	    WHERE M.deleteStatus = 1
	    ORDER BY M.mailNo DESC
	</select>
	
	<!-- 총 행수 구하기 (페이지바 계산) -->
	<select id="getMailCount" resultType="int" parameterType="HashMap">
	    SELECT COUNT(*)
	    FROM tbl_mail
	    WHERE 1=1
	    <if test="importantStatus != null">
	        AND importantStatus = #{importantStatus}
	        <if test="deleteStatus != null"> AND deleteStatus = #{deleteStatus} </if>
	        <if test="saveStatus != null"> AND saveStatus = #{saveStatus} </if>
	    </if>
	</select>
		
	

</mapper>









